<tal:page_with_sidebar_template metal:use-macro="load: main_template.pt">
    <div metal:fill-slot='body'>

        <h1>Guide for Vehicle Authors</h1>

        <div class="pt-3 pb-3">
            <p>Sections:</p>
            <ul>
                <li><a href="#guide">Guide</a></li>
                <li><a href="#example-vehicles-table">Example Vehicles - Table</a></li>
                <li><a href="#example-vehicles-details">Example Vehicles - Details</a></li>
            </ul>
        </div>

        <hr />

        <div class="pt-3 pb-3">
            <div class="pt-3 pb-3">
                <h2 id="guide">Guide</h2>
                <p>There are three categories of vehicle: passenger, mail, and freight.</p>
            </div>

            <h3>Passenger Vehicle</h3>
            <div class="pb-3">

                <h4 class="h5">Refittable Classes</h4>
                <p>CC_PASSENGERS</p>

                <h4 class="h5">Non-Refittable Classes</h4>
                <p>None</p>
            </div>

            <h3>Mail Vehicle</h3>

            <div class="pb-3">
                <h4 class="h5">Refittable Classes</h4>
                <p>CC_MAIL, possibly CC_EXPRESS</p>

                <h4 class="h5">Non-Refittable Classes</h4>
                <p>Usually none.</p>
            </div>

            <h3>Freight Vehicle</h3>

            <div class="pb-3">
                <h4 class="h5">Refittable Classes</h4>

                <div class="pb-3">
                    <p>Set a <strong>basic handling</strong> class.</p>
                    <ul>
                        <tal:cabbage repeat="cargo_class_id cargo_class_scheme.cargo_classes_taxonomy_by_tags['Freight']['Basic Handling']">
                            <li>${cargo_class_id}</li>
                        </tal:cabbage>
                    </ul>
                    <p>Most vehicles should set <strong>one</strong> basic handling class. In most cases setting more than one is not helpful, but there may be exceptions, for example, intermodal container vehicles.</p>
                    <p>Some highly specialised types might not set any basic handling class, and may instead depend on a special handling class, such as armoured vehicles or refrigerated vehicles.</p>
                    <p>Some highly specialised types might not set any basic handling class, and may instead depend on refitting to specific cargo labels, for example nuclear fuel transporters or livestock vans.</p>
                </div>

                <div class="pb-3">
                    <p>Set any <strong>special handling</strong> classes that apply.</p>
                    <ul>
                        <tal:cabbage repeat="cargo_class_id cargo_class_scheme.cargo_classes_taxonomy_by_tags['Freight']['Special Handling']">
                            <li>${cargo_class_id}</li>
                        </tal:cabbage>
                    </ul>
                </div>

                <h4 class="h5">Non-Refittable Classes</h4>
                <div class="pb-3">
                    <p>Some vehicles should set <strong>one</strong> of the <strong>potable status</strong> clases.</p>
                    <ul>
                        <tal:cabbage repeat="cargo_class_id cargo_class_scheme.cargo_classes_taxonomy_by_tags['Freight']['Potable Status']">
                            <li>${cargo_class_id}</li>
                        </tal:cabbage>
                    </ul>
                    <p>Some vehicles are suitable for both potable and non-potable cargos, and do not need to set any potable status classes, for example vehicles that handle packaged cargo via CC_PIECE_GOODS.</p>
                    <p><strong>Never</strong> set both potable status classes.</p>
                    <p><strong>Never</strong> set potable status classes as refittable, they are exclude-only.</p>
                    <p>Some highly specialised vehicles may not need to set any potable status classes, and may instead depend on refitting to specific cargo labels.</p>
                </div>
                <div class="pb-3">
                    <p>Sometimes it's helpful to be able to exclude weird cargos from general vehicles.</p>
                    <ul>
                        <li>CC_WEIRD</li>
                    </ul>
                </div>
            </div>
        </div>

        <hr />

        <div class="pt-3 pb-3">
            <h2 id="example-vehicles-table">Example Vehicles - Table</h2>
            <!--! table of contents -->
            <table class="table table-striped table-condensed table-bordered tablesorter">
                <tr>
                    <th style="width: 33.33%;">Example vehicle</th>
                    <th style="width: 33.33%;">Refittable cargo classes </th>
                    <th style="width: 33.33%;">Non-refittable cargo classes</th>
                </tr>
                <tal:vehicle_nodes repeat="vehicle_node sorted(cargo_class_scheme.example_vehicles.items())">
                    <tal:example_vehicle define="vehicle_node_id vehicle_node[0]; example_vehicle vehicle_node[1];">
                        <tr>
                            <td><a href="#${vehicle_node_id}">${example_vehicle.name}</a></td>
                            <td>
                                <tal:block repeat="cargo_class example_vehicle.cargo_classes_allowed">
                                    ${cargo_class}
                                </tal:block>
                            </td>
                            <td>
                                <tal:block repeat="cargo_class example_vehicle.cargo_classes_disallowed">
                                    ${cargo_class}
                                </tal:block>
                            </td>
                        </tr>
                    </tal:example_vehicle>
                </tal:vehicle_nodes>
            </table>
        </div>

        <hr />

        <div class="pt-3 pb-3">
            <h2 id="example-vehicles-details">Example Vehicles - Details</h2>
            <tal:example_vehicle_nodes repeat="example_vehicle_node sorted(cargo_class_scheme.example_vehicles.items())">
                <tal:example_vehicle define="example_vehicle_node_id example_vehicle_node[0]; example_vehicle example_vehicle_node[1];">
                    <div class="mt-5">
                        <h3 id="${example_vehicle_node_id}">
                            ${example_vehicle.name} <span class="muted">(example)</span>
                        </h3>
                        <table class="cargo-class-facts">
                            <tbody>
                                <tr>
                                    <th>Vehicle description</th>
                                    <td>${example_vehicle.vehicle_description}</td>
                                </tr>
                                <tr>
                                    <th>Cargo classes allowed</th>
                                    <td>
                                        <tal:block repeat="cargo_class example_vehicle.cargo_classes_allowed">
                                            ${cargo_class}
                                        </tal:block>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Cargo classes disallowed</th>
                                    <td>
                                        <tal:block repeat="cargo_class example_vehicle.cargo_classes_disallowed">
                                            ${cargo_class}
                                        </tal:block>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Example cargos</th>
                                    <td>
                                        <tal:block repeat="example_cargo sorted(cargo_class_scheme.vehicle_cargo_mapping.get(example_vehicle_node_id, []))">
                                            <tal:vehicle switch="example_cargo in cargo_class_scheme.example_cargos">
                                                <tal:valid_cargo case="True">
                                                    <a href="${docs_pages['industry_authors']}#${example_cargo}">${cargo_class_scheme.example_cargos[example_cargo].name}</a><!--! whitespace shenans
                                                 -->${',' if not repeat.example_cargo.end else None}
                                                </tal:valid_cargo>
                                                <tal:invalid_cargo case="False">
                                                    ${example_cargo}
                                                </tal:invalid_cargo>
                                            </tal:vehicle>
                                        </tal:block>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </tal:example_vehicle>
            </tal:example_vehicle_nodes>
        </div>

    </div>
</tal:page_with_sidebar_template>
