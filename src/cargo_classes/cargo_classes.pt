<html>
    <head>
        <link type="text/css" href="css/bootstrap.min.css" rel="stylesheet">
        <link type="text/css" href="css/bootstrap-responsive.min.css" rel="stylesheet">
        <link type="text/css" href="css/style.css" rel="stylesheet">
        <script>
            window.onload = function() {
                const elements = document.querySelectorAll('body *');

                elements.forEach(function(element) {
                    element.childNodes.forEach(function(child) {
                        // Only process text nodes (ignoring attributes)
                        if (child.nodeType === Node.TEXT_NODE && child.nodeValue.match(/\bCC_[A-Z_]+\b/)) {
                            // Replace the matched text and wrap it in <code> tags
                            const newNodeValue = child.nodeValue.replace(/\b(CC_[A-Z_]+)\b/g, '<a href="#$1"><code>$1</code></a>');

                            // Create a temporary container to interpret the HTML
                            const span = document.createElement('span');
                            span.innerHTML = newNodeValue;

                            // Replace the text node with the new span element
                            child.parentNode.replaceChild(span, child);
                        }
                    });
                });
            };
        </script>
    </head>
    <body>
        <div class="container">

            <h1>Cargo Class Scheme</h1>
            <p class="lead">Scheme ID: ${cargo_class_scheme.name}</p>
            <ul>
                <tal:block repeat="description_entry cargo_class_scheme.metadata['description']">
                    <li>${description_entry}</li>
                </tal:block>
            </ul>

            <hr />

            <p>Sections:</p>
            <ul>
                <li><a href="#cargo-classes">Cargo Classes</a></li>
                <li><a href="#example-cargos">Example Cargos</a></li>
                <li><a href="#example-vehicles">Example Vehicles</a></li>
            </ul>
            <hr />

            <h2 id="cargo-classes">Cargo Classes</h2>
            <!--! table of contents -->
            <table class="table table-striped table-condensed table-bordered tablesorter" data-wrap-cargo-classes-in-code-tags>
                <tr>
                    <th>Cargo class</th>
                    <th>ID</th>
                    <th>Bit number</th>
                </tr>
                <tal:cargo_class_nodes repeat="cargo_class_node cargo_class_scheme.cargo_classes_taxonomy.items()">
                    <tal:cargo_class define="cargo_class_node_id cargo_class_node[0]; cargo_class cargo_class_node[1];">
                        <tr>
                            <td>
                                <a class="${'do_not_use' if cargo_class.get('do_not_use', False) else ''}" href="#${cargo_class_node_id}"><!--! whitespace shenans
                                 -->${cargo_class.name}
                                    <span tal:condition="cargo_class.get('do_not_use', False)">(do not use)</span><!--! whitespace shenans
                              --></a>

                            </td>
                            <td>${cargo_class_node_id}</td>
                            <td>${cargo_class.bit_number}</td>
                        </tr>
                    </tal:cargo_class>
                </tal:cargo_class_nodes>
            </table>

            <tal:cargo_class_nodes repeat="cargo_class_node cargo_class_scheme.cargo_classes_taxonomy.items()">
                <tal:cargo_class define="cargo_class_node_id cargo_class_node[0]; cargo_class cargo_class_node[1];">
                    <hr style="margin-top:30px; margin-bottom:30px;" />
                    <h3 id="${cargo_class_node_id}">
                        ${cargo_class.name} <span tal:condition="cargo_class.get('do_not_use', False)">(do not use)</span>
                    </h3>
                    <p>${cargo_class_node_id}</p>
                    <table class="cargo-class-facts">
                        <tbody>
                            <tr>
                                <th>Cargo class description</th>
                                <td>
                                     <tal:block switch="len(cargo_class.cargo_class_description) > 1">
                                        <tal:is_list case="True">
                                            <ul>
                                                <tal:list_items repeat="list_item cargo_class.cargo_class_description">
                                                    <li>${list_item}</li>
                                                </tal:list_items>
                                            </ul>
                                        </tal:is_list>
                                        <tal:is_list case="False">
                                            <p>${cargo_class.cargo_class_description[0]}</p>
                                        </tal:is_list>
                                    </tal:block>
                                </td>
                           </tr>
                            <tr>
                                <th>Example cargos</th>
                                <td>
                                    <tal:block repeat="example_cargo sorted(cargo_class_scheme.cargo_cargo_class_mapping.get(cargo_class_node_id, []))">
                                        <tal:vehicle switch="example_cargo in cargo_class_scheme.example_cargos">
                                            <tal:valid_cargo case="True">
                                                <a href="#${example_cargo}">${cargo_class_scheme.example_cargos[example_cargo].name}</a><!--! whitespace shenans
                                             -->${',' if not repeat.example_cargo.end else None}
                                            </tal:valid_cargo>
                                            <tal:invalid_cargo case="False">
                                                ${example_cargo}
                                            </tal:invalid_cargo>
                                        </tal:vehicle>
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Example vehicles</th>
                                <td>
                                    <tal:block repeat="example_vehicle sorted(cargo_class_scheme.vehicle_cargo_class_mapping.get(cargo_class_node_id, []))">
                                        <tal:vehicle switch="example_vehicle in cargo_class_scheme.example_vehicles">
                                            <tal:valid_vehicle case="True">
                                                <a href="#${example_vehicle}">${cargo_class_scheme.example_vehicles[example_vehicle].name}</a><!--! whitespace shenans
                                             -->${',' if not repeat.example_vehicle.end else None}
                                            </tal:valid_vehicle>
                                            <tal:invalid_vehicle case="False">
                                                ${example_vehicle}
                                            </tal:invalid_vehicle>
                                        </tal:vehicle>
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Industry GRF advice</th>
                                <td>
                                    <tal:block condition="len(cargo_class.cargo_grf_advice) > 0">
                                        <tal:list_items repeat="list_item cargo_class.cargo_grf_advice">
                                            <p>${list_item}</p>
                                        </tal:list_items>
                                    </tal:block>
                                    <p tal:condition="cargo_class.fallback_to_piece_goods">This cargo class may not be widely supported by older vehicle GRFs. Also set CC_PIECE_GOODS as a fallback (recommended).</p>
                                    <p tal:condition="cargo_class.set_bit_13 == 'true'">Also set CC_FOOD_GRADE (recommended).</p>
                                    <p tal:condition="cargo_class.set_bit_14 == 'true'">Also set CC_NON_FOOD_GRADE (recommended).</p>
                                    <p tal:condition="cargo_class.set_bit_13 == 'as_appropriate'">Also set CC_FOOD_GRADE if appropriate to cargo.</p>
                                    <p tal:condition="cargo_class.set_bit_14 == 'as_appropriate'">Also set CC_NON_FOOD_GRADE if appropriate to cargo.</p>
                                    <p tal:condition="(cargo_class.set_bit_13 == 'as_appropriate' and cargo_class.set_bit_14 == 'as_appropriate') or cargo_class.set_bit_13 == 'never' or cargo_class.set_bit_14 == 'never'"
                                       style="color:red;">
                                        <small>Do <strong>not</strong> set both CC_FOOD_GRADE and CC_NON_FOOD_GRADE on a cargo, as this can cause the cargo to become unrefittable. If a cargo does not specifically require food-grade or non-food-grade transport, leave both of those classes unset.</small>
                                    </p>

                                </td>
                            </tr>
                            <tr>
                                <th>Vehicle GRF advice</th>
                                <td>
                                    <p tal:condition="cargo_class.vehicle_set_as_allow">Only for allow list.</p>
                                    <p tal:condition="cargo_class.vehicle_set_as_disallow">Only for disallow list.</p>
                                    <tal:block condition="len(cargo_class.vehicle_grf_advice) > 0">
                                        <tal:list_items repeat="list_item cargo_class.vehicle_grf_advice">
                                            <p>${list_item}</p>
                                        </tal:list_items>
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Replaces or reuses NML/GS classname</th>
                                <td>
                                    ${cargo_class.nml_cargo_class_name}
                                    <small>
                                        <tal:block switch="cargo_class.nml_cargo_class_name == cargo_class_node_id">
                                            <tal:case case="True">
                                                (no change)
                                            </tal:case>
                                            <tal:case case="False">
                                                (NML/GS classname replaced)
                                            </tal:case>
                                        </tal:block>
                                    </small>
                                </td>
                            </tr>
                            <tr>
                                <th>Bit number</th>
                                <td><code>${cargo_class.bit_number}</code></td>
                            </tr>
                        </tbody>
                    </table>
                </tal:cargo_class>
            </tal:cargo_class_nodes>

            <hr style="margin-top:30px; margin-bottom:30px;" />

            <h2 id="example-cargos">Example Cargos</h2>
            <!--! table of contents -->
            <table class="table table-striped table-condensed table-bordered tablesorter">
                <tr>
                    <th>Example Cargo</th>
                    <th>Recommended Classes</th>
                </tr>
                <tal:cargo_nodes repeat="cargo_node sorted(cargo_class_scheme.example_cargos.items())">
                    <tal:example_cargo define="cargo_node_id cargo_node[0]; example_cargo cargo_node[1];">
                        <tr>
                            <td><a href="#${cargo_node_id}">${example_cargo.name}</a></td>
                            <!--! showing classes might be overkill, dunno -->
                            <td style="width:50%;">
                                <tal:block repeat="cargo_class example_cargo.cargo_classes">
                                    ${cargo_class}
                                </tal:block>
                            </td>
                        </tr>
                    </tal:example_cargo>
                </tal:cargo_nodes>
            </table>

            <tal:example_cargo_nodes repeat="example_cargo_node sorted(cargo_class_scheme.example_cargos.items())">
                <tal:example_cargo define="example_cargo_node_id example_cargo_node[0]; example_cargo example_cargo_node[1];">
                    <hr style="margin-top:30px; margin-bottom:30px;" />
                    <h2 id="${example_cargo_node_id}">
                        ${example_cargo.name} <span class="muted">(example)</span>
                    </h2>
                    <table class="cargo-class-facts">
                        <tbody>
                            <tr>
                                <th>Vehicle description</th>
                                <td>${example_cargo.cargo_description}</td>
                            </tr>
                            <tr>
                                <th>Cargo classes</th>
                                <td>
                                    <tal:block repeat="cargo_class example_cargo.cargo_classes">
                                        ${cargo_class}
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Example vehicles</th>
                                <td>
                                    <tal:block repeat="example_vehicle sorted(cargo_class_scheme.vehicle_cargo_mapping.get(example_cargo_node_id, []))">
                                        <tal:vehicle switch="example_vehicle in cargo_class_scheme.example_vehicles">
                                            <tal:valid_vehicle case="True">
                                                <a href="#${example_vehicle}">${cargo_class_scheme.example_vehicles[example_vehicle].name}</a><!--! whitespace shenans
                                             -->${',' if not repeat.example_vehicle.end else None}
                                            </tal:valid_vehicle>
                                            <tal:invalid_vehicle case="False">
                                                ${example_vehicle}
                                            </tal:invalid_vehicle>
                                        </tal:vehicle>
                                    </tal:block>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </tal:example_cargo>
            </tal:example_cargo_nodes>

            <hr style="margin-top:30px; margin-bottom:30px;" />

            <h2 id="example-vehicles">Example Vehicles</h2>
            <!--! table of contents -->
            <table class="table table-striped table-condensed table-bordered tablesorter">
                <tr>
                    <th>Example vehicle</th>
                </tr>
                <tal:vehicle_nodes repeat="vehicle_node sorted(cargo_class_scheme.example_vehicles.items())">
                    <tal:example_vehicle define="vehicle_node_id vehicle_node[0]; example_vehicle vehicle_node[1];">
                        <tr>
                            <td><a href="#${vehicle_node_id}">${example_vehicle.name}</a></td>
                        </tr>
                    </tal:example_vehicle>
                </tal:vehicle_nodes>
            </table>

            <tal:example_vehicle_nodes repeat="example_vehicle_node sorted(cargo_class_scheme.example_vehicles.items())">
                <tal:example_vehicle define="example_vehicle_node_id example_vehicle_node[0]; example_vehicle example_vehicle_node[1];">
                    <hr style="margin-top:30px; margin-bottom:30px;" />
                    <h2 id="${example_vehicle_node_id}">
                        ${example_vehicle.name} <span class="muted">(example)</span>
                    </h2>
                    <table class="cargo-class-facts">
                        <tbody>
                            <tr>
                                <th>Vehicle description</th>
                                <td>${example_vehicle.vehicle_description}</td>
                            </tr>
                            <tr>
                                <th>Cargo classes allowed</th>
                                <td>
                                    <tal:block repeat="cargo_class example_vehicle.cargo_classes_allowed">
                                        ${cargo_class}
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Cargo classes disallowed</th>
                                <td>
                                    <tal:block repeat="cargo_class example_vehicle.cargo_classes_disallowed">
                                        ${cargo_class}
                                    </tal:block>
                                </td>
                            </tr>
                            <tr>
                                <th>Example cargos</th>
                                <td>
                                    <tal:block repeat="example_cargo sorted(cargo_class_scheme.vehicle_cargo_mapping.get(example_vehicle_node_id, []))">
                                        <tal:vehicle switch="example_cargo in cargo_class_scheme.example_cargos">
                                            <tal:valid_cargo case="True">
                                                <a href="#${example_cargo}">${cargo_class_scheme.example_cargos[example_cargo].name}</a><!--! whitespace shenans
                                             -->${',' if not repeat.example_cargo.end else None}
                                            </tal:valid_cargo>
                                            <tal:invalid_cargo case="False">
                                                ${example_cargo}
                                            </tal:invalid_cargo>
                                        </tal:vehicle>
                                    </tal:block>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </tal:example_vehicle>
            </tal:example_vehicle_nodes>

        </div>
    </body>
</html>
